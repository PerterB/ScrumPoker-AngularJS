/*! angular-audio-player v0.2.1 | date: 29-01-2014 */
angular.module("audioPlayer",[]).directive("audioPlayer",["$rootScope","$log","$interpolate","$timeout","throttle",function(a,b,c,d,e){var f=function(a,b,c,d){return this instanceof f?(d=d||{},c=c||[],angular.extend(this,{_element:a,_audioTag:a[0],_scope:b,_playlist:c,name:d.name||"audioplayer",playing:!1,currentTrack:0,tracks:c.length,volume:a[0].volume,muted:a[0].muted,duration:a[0].duration,currentTime:a[0].currentTime,buffered:a[0].buffered,played:a[0].played,seekable:a[0].seekable,formatDuration:"",formatTime:"",loadPercent:0,position:a[0].currentTime}),void(this._unbindListeners=this._bindListeners(b))):new f(a,b,c,d)};return f.prototype={load:function(a,b){if("boolean"==typeof a?(b=a,a=null):"object"==typeof a&&(this._clearAudioList(),this._addAudioList(a)),this._scope.$emit(this.name+":load",b),this._audioTag.load(),b){var c=this;c._element.bind("canplaythrough",function(){c.play(),c._element.unbind("canplaythrough")})}},play:function(a){return this._playlist.length>a?(this.currentTrack=a+1,this.load(this._playlist[a],!0)):(!this.currentTrack&&this._audioTag.readyState&&this.currentTrack++,void this._audioTag.play())},playPause:function(a){"number"==typeof a&&a+1!==this.currentTrack?this.play(a):this.playing?this.pause():this.play()},pause:function(){this._audioTag.pause()},toggleMute:function(){this.muted=this._audioTag.muted=!this._audioTag.muted},next:function(a){var b=this;if(b.currentTrack&&b.currentTrack<b.tracks){var c=a||b.playing;b.pause(),d(function(){b._clearAudioList(),b._addAudioList(b._playlist[b.currentTrack]),b.load(c),b.currentTrack++})}},prev:function(a){var b=this;if(b.currentTrack&&b.currentTrack-1){var c=a||b.playing;b.pause(),d(function(){b._clearAudioList(),b._addAudioList(b._playlist[b.currentTrack-2]),b.load(c),b.currentTrack--})}},_addAudioList:function(a){var b=this;if(angular.isArray(a))angular.forEach(a,function(a){var d=angular.element(c('<source src="{{ src }}" type="{{ type }}" media="{{ media }}">')(a));b._element.append(d)});else if(angular.isObject(a)){var d=angular.element(c('<source src="{{ src }}" type="{{ type }}" media="{{ media }}">')(a));b._element.append(d)}},_clearAudioList:function(){this._element.contents().remove()},_formatTime:function(a){var b,c=parseInt(a/3600,10)%24,d=parseInt(a/60,10)%60,e=parseInt(a%60,10),f=(10>d?"0"+d:d)+":"+(10>e?"0"+e:e);return b=c>0?(10>c?"0"+c:c)+":"+f:f},_bindListeners:function(a){var b=this,c=this._element,d=e(1e3,!1,function(){a.$apply(function(){b.currentTime=b.position=b._audioTag.currentTime,b.formatTime=b._formatTime(b.currentTime)})}),f=function(c){return function(){a.$apply(function(){b.playing=c}),c?a.$emit(b.name+":play",b.currentTrack-1):a.$emit(b.name+":pause")}},g=function(){a.$apply(function(){b.currentTrack||b.currentTrack++,b.duration=b._audioTag.duration,b.formatDuration=b._formatTime(b.duration),b.loadPercent=parseInt(b._audioTag.buffered.end(b._audioTag.buffered.length-1)/b.duration*100,10)})},h=function(){b.next(!0)},i=function(){b._audioTag.buffered.length&&a.$apply(function(){b.loadPercent=parseInt(b._audioTag.buffered.end(b._audioTag.buffered.length-1)/b.duration*100,10)})};return c.bind("playing",f(!0)),c.bind("pause",f(!1)),c.bind("ended",h),c.bind("timeupdate",d),c.bind("loadedmetadata",g),c.bind("progress",i),function(){c.unbind("playing"),c.unbind("pause"),c.unbind("ended"),c.unbind("timeupdate"),c.unbind("loadedmetadata"),c.unbind("progress")}}},{scope:{exposedPlayer:"=playerControl",playlist:"=playlist"},link:function(a,c){function e(c,e){var f,g=a.exposedPlayer,h=null;if(void 0===c)return void 0!==e?(g.pause(),b.debug("playlist was deleted from scope, pausing and returning")):b.error("if you use playlist attribute, you need $scope.playlistVariable = []; in your code");if(g.currentTrack){f=e?e[g.currentTrack-1]:-1;for(var i=0;i<c.length;i++)if(angular.equals(c[i],f)){h=i;break}null!==h?(g.currentTrack=h+1,g.tracks=c.length):(g.pause(),c.length&&d(function(){g._clearAudioList(),g._addAudioList(c[0]),g.load(),g.tracks=c.length}))}else c.length&&(g._clearAudioList(),g._addAudioList(c[0]),g.load(),g.tracks=c.length)}if("AUDIO"!==c[0].tagName)return b.error("audioPlayer directive works only when attached to an <audio> type tag");var g=[],h=c.find("source"),i=a.playlist||[];angular.forEach(h,function(a){g.push({src:a.src,type:a.type,media:a.media})}),g.length&&i.unshift(g),a.exposedPlayer=new f(c,a,i),a.$emit(a.exposedPlayer.name+":ready",a.exposedPlayer),a.$watch("playlist",e,!0),a.$on("$destroy",function(){a.exposedPlayer._unbindListeners()})}}}]),angular.module("audioPlayer").factory("throttle",["$timeout",function(a){return function(b,c,d,e){var f,g=0;"boolean"!=typeof c&&(e=d,d=c,c=void 0);var h=function(){var h=this,i=+new Date-g,j=arguments,k=function(){g=+new Date,d.apply(h,j)},l=function(){f=void 0};e&&!f&&k(),f&&a.cancel(f),void 0===e&&i>b?k():c!==!0&&(f=a(e?l:k,void 0===e?b-i:b))};return h}}]);